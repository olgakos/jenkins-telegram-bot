plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}


def allureVersion = "2.17.3",
    selenideVersion = "6.3.4", // "6.2.1",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.36"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
    report {
        version.set(allureVersion)
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion", //NB, переменная
            "io.qameta.allure:allure-selenide:$allureVersion", //NB, переменная
            "org.junit.jupiter:junit-jupiter-api:$junitVersion") //NB, переменная //Logging
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion", //NB, переменная
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

//fix: кириллица
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }


        /*

        task properties_test(type: Test) {
    useJUnitPlatform{
        includeTags "properties"
    }

}

task smoke_test(type: Test) {
    useJUnitPlatform{
        includeTags "smoke"
    }
         */



    /*
    //для параметризации 11
    tasks.withType(Test) {
        systemProperties(System.getProperties())
        systemProperty "junit.jupiter.extensions.autodetection.enabled", "true"}
*/
}